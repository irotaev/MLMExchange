@using MLMExchange.Lib
@using MLMExchange.Lib.Form

@model MLMExchange.Models.Registration.UserModel

@{
  string type = (Html.ViewData["Type"] != null) ? Html.ViewData["Type"].ToString() : "default";
}

@Html.HiddenFor(x => x.Id)

<div class="b-ib input-control text">
  @Html.CustomValidationMessageFor(x => x.Login)

  <div class="b-ib__content-wrapper">
    <div class="b-ib__info-helper" data-ot="@MLMExchange.Properties.ResourcesA.EnterLogin" data-ot-style="BlackStyle">
      <i class="b-ib__info-icon fa fa-question"></i>
    </div>

    <div class="b-ib__input-content">
      <label class="b-ib__label">@MLMExchange.Properties.ResourcesA.EnterLogin</label>
      @{
        Dictionary<string, object> login_additionalAttributes = new Dictionary<string,object>
        {
          { "type", "text" },
          { "placeholder", @MLMExchange.Properties.ResourcesA.EnterLogin },
          { "class", String.Format("b-ib__input b-ib__input_type_{0}", type) }
        };

        if (ViewData["Usage"] != null && ViewData["Usage"] == "Edit")
        {
          login_additionalAttributes.Add("readonly", "readonly");
        }
      }

      @Html.TextBoxFor(x => x.Login, login_additionalAttributes)
      <button class="btn-clear"></button>
    </div>
  </div>
</div>

<div class="b-ib">
  @Html.CustomValidationMessageFor(x => x.Password)

  <div class="b-ib__content-wrapper">
    <div class="b-ib__info-helper" data-ot="@MLMExchange.Properties.ResourcesA.EnterPassword" data-ot-style="BlackStyle">
      <i class="b-ib__info-icon fa fa-question"></i>
    </div>

    <div class="b-ib__input-content">
      <label class="b-ib__label">@MLMExchange.Properties.ResourcesA.EnterPassword</label>
      @Html.PasswordFor(x => x.Password, new { placeholder = @MLMExchange.Properties.ResourcesA.EnterPassword, @class = String.Format("b-ib__input b-ib__input_type_{0}", @type) })
    </div>
  </div>
</div>

<div class="b-ib">
  @Html.CustomValidationMessageFor(x => x.PasswordConfirmation)

  <div class="b-ib__content-wrapper">
    <div class="b-ib__info-helper" data-ot="@MLMExchange.Properties.ResourcesA.EnterPasswordConfirmation" data-ot-style="BlackStyle">
      <i class="b-ib__info-icon fa fa-question"></i>
    </div>

    <div class="b-ib__input-content">
      <label class="b-ib__label">@MLMExchange.Properties.ResourcesA.EnterPasswordConfirmation</label>
      @Html.PasswordFor(x => x.PasswordConfirmation, new { placeholder = @MLMExchange.Properties.ResourcesA.EnterPasswordConfirmation, @class = String.Format("b-ib__input b-ib__input_type_{0}", @type) })
    </div>
  </div>
</div>

<div class="b-ib input-control text">
  @Html.CustomValidationMessageFor(x => x.Name)

  <div class="b-ib__content-wrapper">
    <div class="b-ib__info-helper" data-ot="@MLMExchange.Properties.ResourcesA.EnterName" data-ot-style="BlackStyle">
      <i class="b-ib__info-icon fa fa-question"></i>
    </div>

    <div class="b-ib__input-content">
      <label class="b-ib__label">@MLMExchange.Properties.ResourcesA.EnterName</label>
      @Html.TextBoxFor(x => x.Name, new { type = "text", placeholder = @MLMExchange.Properties.ResourcesA.EnterName, @class = String.Format("b-ib__input b-ib__input_type_{0}", @type) })
      <button class="btn-clear"></button>
    </div>
  </div>
</div>

<div class="b-ib input-control text">
  @Html.CustomValidationMessageFor(x => x.Surname)

  <div class="b-ib__content-wrapper">
    <div class="b-ib__info-helper" data-ot="@MLMExchange.Properties.ResourcesA.EnterSurname" data-ot-style="BlackStyle">
      <i class="b-ib__info-icon fa fa-question"></i>
    </div>

    <div class="b-ib__input-content">
      <label class="b-ib__label">@MLMExchange.Properties.ResourcesA.EnterSurname</label>
      @Html.TextBoxFor(x => x.Surname, new { type = "text", placeholder = @MLMExchange.Properties.ResourcesA.EnterSurname, @class = String.Format("b-ib__input b-ib__input_type_{0}", @type) })
      <button class="btn-clear"></button>
    </div>
  </div>
</div>

<div class="b-ib input-control text">
  @Html.CustomValidationMessageFor(x => x.Patronymic)

  <div class="b-ib__content-wrapper">
    <div class="b-ib__info-helper" data-ot="@MLMExchange.Properties.ResourcesA.EnterPatronymic" data-ot-style="BlackStyle">
      <i class="b-ib__info-icon fa fa-question"></i>
    </div>

    <div class="b-ib__input-content">
      <label class="b-ib__label">@MLMExchange.Properties.ResourcesA.EnterPatronymic</label>
      @Html.TextBoxFor(x => x.Patronymic, new { type = "text", placeholder = @MLMExchange.Properties.ResourcesA.EnterPatronymic, @class = String.Format("b-ib__input b-ib__input_type_{0}", @type) })
      <button class="btn-clear"></button>
    </div>
  </div>
</div>

<div class="b-ib input-control text">
  @Html.CustomValidationMessageFor(x => x.Email)

  <div class="b-ib__content-wrapper">
    <div class="b-ib__info-helper" data-ot="@MLMExchange.Properties.ResourcesA.EnterEmail" data-ot-style="BlackStyle">
      <i class="b-ib__info-icon fa fa-question"></i>
    </div>

    <div class="b-ib__input-content">
      <label class="b-ib__label">@MLMExchange.Properties.ResourcesA.EnterEmail</label>
      @Html.TextBoxFor(x => x.Email, new { type = "text", placeholder = @MLMExchange.Properties.ResourcesA.EnterEmail, @class = String.Format("b-ib__input b-ib__input_type_{0}", @type) })
      <button class="btn-clear"></button>
    </div>
  </div>
</div>

@Html.ApplicationTextBoxFor(x => x.Skype, MLMExchange.Properties.ResourcesA.EnterSkype, @MLMExchange.Properties.ResourcesA.EnterSkype, type)

<!--#region Phone number-->
@{
  var phoneNumber_additionalAttributes = (new Dictionary<string, object>());

  if (ViewData["Usage"] != null && ViewData["Usage"] == "Edit")
  {
    phoneNumber_additionalAttributes.Add("readonly", "readonly");
  }

  @Html.ApplicationTextBoxFor(x => x.PhoneNumber, MLMExchange.Properties.ResourcesA.EnterPhoneNumberAsMasked, @MLMExchange.Properties.ResourcesA.EnterPhoneNumberAsMaskedDescription, type, null, phoneNumber_additionalAttributes)
    
}

   
@{
   if (Model.PhoneNumber == null)
   {
        <script>
        $(function ()
            {          
              $(".b-ib__input[name='PhoneNumber']").mask("+[sss] (999) 999-99-99");
            }
          )
        </script>
   }
   else
   {
        <script>
        $(function ()
           {
            $(".b-ib__input[name='PhoneNumber']").unmask();
           }
           )
        </script>
    }
}
 

@if (ViewData["Usage"] != null && ViewData["Usage"] == "Register")
{
  long? referer = MLMExchange.Models.Registration.UserModel.GetRefererRoleIdFromRequest(Request);

  if (referer != null)
  { 
    @Html.ApplicationTextBoxFor("ReferalRoleId", MLMExchange.Properties.ResourcesA.BindReferalUserId, MLMExchange.Properties.ResourcesA.BindReferalUserIdDescription, type,
        referer.ToString(), new Dictionary<string, object> { { "readonly", "readonly" } })
  }
}
else if (ViewData["Usage"] != null && ViewData["Usage"] == "Edit")
{
  if (Model.ReferalRoleId != null)
  {
    @Html.ApplicationTextBoxFor(x => x.ReferalRoleId, MLMExchange.Properties.ResourcesA.BindReferalUserId, MLMExchange.Properties.ResourcesA.BindReferalUserIdDescription, type,
      additionalAttributes: new Dictionary<string, object> { { "readonly", "readonly" } })
  }
}

<div class="b-ib b-ib_content_photo">
  <label class="b-ib__label">@MLMExchange.Properties.ResourcesA.AddPhoto</label>
  @Html.TextBoxFor(x => x.Photo, new { type = "file", placeholder = @MLMExchange.Properties.ResourcesA.AddPhoto, @class = String.Format("b-ib__input b-ib_choose-file b-ib__input_type_{0}", @type) })

  <i class="@String.Format("b-ib__file-preview b-ib__file-preview_type_{0}", type)">
    <img class="b-ib__image" src="@(!String.IsNullOrEmpty(Model.PhotoRelativePath)
      ? "/" + MLMExchange.Lib.Image.Image.UploadRelativeDir + "/" + (new MLMExchange.Lib.Image.Image(Model.PhotoRelativePath).Crop(206, 212).FullName) : String.Empty)" />
  </i>

  @{
    string additionalClass = null;

    switch (type)
    {
      case "blue":
        additionalClass = "b-button_color_green-sea";
        break;
    }
  }

  <input class="@String.Format("b-button {0} b-button_hover-animate_opacity b-ib_file-chooser b-ib_file-chooser_type_{1}", additionalClass, type)"
         type="button" title="@MLMExchange.Properties.ResourcesA.Upload" value="@MLMExchange.Properties.ResourcesA.Upload" />
</div>

