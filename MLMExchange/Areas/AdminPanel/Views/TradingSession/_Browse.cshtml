@using Ext.Net
@using Ext.Net.MVC

@model MLMExchange.Areas.AdminPanel.Models.TradingSessionModel

@{
  var X = Html.X();
}

<section class="b-ts b-ab @(Model.State == Logic.TradingSessionStatus.NeedEnsureProfibility ? "b-ab b-ab_customise_full-custom pb-bpa_state_accepted" : null)">
  <header class="b-ab__title"><i class="b-ab__icon fa fa-usd"></i> @Logic.Properties.GeneralResources.TradingSession</header>

  <div class="b-ab__content b-ts__content">
    @if (Model.State == Logic.TradingSessionStatus.NA)
    {
      <div class="b-text b-ts__text b-ts__session-not-opened-text">
        @MLMExchange.Properties.PrivateResource.TradingSessionNotOpened
      </div>
    }
    else
    {
      <script>
        function YieldTradingSession__Listener(view, commandName, record) {

          if (commandName === "YieldTradingSessionBill_Pay") {
            new Ext.Window({
              id: "PayYieldTradingSession__Window",
              width: 800,
              resizable: false,
              modal: true,
              title: "@Logic.Properties.GeneralResources.PaymentSystemGroup",
              autoLoad: {
                url: "/AdminPanel/PaymentSystemGroup/Browse",
                params: { ForUserId: record.data.UserId, IsRequiredYieldSessionBillPayment: true, YieldTradingSessionBillId: record.data.YieldTradingSessionBillId },
                nocache: true,
                text: "@MLMExchange.Properties.ResourcesA.Loading",
                callback: function () {
                  $.each($("#PayYieldTradingSession__Window").find("script[data-app-script='true']"), function (index, element) {
                    var scriptTag = $(document.createElement('script')).text($(element).text());

                    $(scriptTag).appendTo($("body"));
                  });
                }
              }
            }).show();
          }
        }
      </script>
      
      <div class="b-ts__message-wrapper">
        @if (Model.SallerInterestRateBill.BillPaymentState == Logic.BillPaymentState.WaitingPayment)
        {
        <div class="b-text b-ts__text b-ts__waiting-seller-interest-rate-payment">
          @MLMExchange.Properties.PrivateResource.WaitingSellerInterestRatePayment
        </div>
        }

        @if (Model.CheckBill.BillPaymentState == Logic.BillPaymentState.WaitingPayment)
        {
        <div class="b-text b-ts__text b-ts__waiting-check-payment">
          @MLMExchange.Properties.PrivateResource.WaitingCheckPayment
        </div>
        }
      </div>

        if (Model.State == Logic.TradingSessionStatus.NeedEnsureProfibility)
        {
        <div class="b-ts__pay-yield-trading-session">
          <div class="b-ts__header-text">
            @MLMExchange.Properties.PrivateResource.PayYieldTradingSession
            <i class="b-ts__icon fa fa-question-circle" data-ot="@MLMExchange.Properties.PrivateResource.PayYieldTradingSession" data-ot-style="BlackStyle"></i>
          </div>

          <div class="b-ts__users-to-pay" id="b-ts__users-to-pay_ID">
            @(X.GridPanel().ID("TradingSession__PayYieldTradingSession_Grid")
                .Height(375)
                .Border(false)
                .Header(false)
                .Store(
                  X.Store()
                  .ID("TradingSession__PayYieldTradingSession_Store")
                  .RemotePaging(true)
                  .PageSize(10)
                  .DataSource(Model.YieldSessionPaymentAcceptors)
                  .Model(X.Model().Fields(
                      new ModelField { Name = "UserId" },
                      new ModelField { Name = "UserLogin" },
                      new ModelField { Name = "MoneyAmount" },
                      new ModelField { Name = "DefaultPaymentSystem" },
                      new ModelField { Name = "YieldTradingSessionBillId" }
                  ))
                    .ServerProxy(
                      Html.X().AjaxProxy()
                          .Url(Url.Action("GetData"))
                      )
                  )
                  .ColumnModel(
                    X.RowNumbererColumn(),
                    X.Column().Text(Logic.Properties.GeneralResources.Login).DataIndex("UserLogin").Flex(1),
                    X.Column().Text(Logic.Properties.GeneralResources.MoneyAmount).DataIndex("MoneyAmount").Flex(1),
                    X.Column().Text(Logic.Properties.GeneralResources.DefaultPaymentSystem).DataIndex("DefaultPaymentSystem").Flex(1),
                    X.ImageCommandColumn().Commands(
                      X.ImageCommand().CommandName("YieldTradingSessionBill_Pay").Icon(Icon.Money).Text(MLMExchange.Properties.ResourcesA.Pay)
                    )
                      .Listeners(ls =>
                      {
                        ls.Command.Fn = "YieldTradingSession__Listener";
                      }))
                  .BottomBar(
                    X.PagingToolbar()                    
                      .Plugins(X.ProgressBarPager())
                  )
                 .RenderTo("b-ts__users-to-pay_ID")
                 )
          </div>
        </div>
        }
        else if (Model.State == Logic.TradingSessionStatus.WaitForProgressStart)
        {
          <script>
            function setSessionInProgress(_this) {
              $.ajax({
                url: "/TradingSession/SetSessionInProgress",
                data: { 'tradingSessionId': $(_this).data("trade-session-id") },
                type: "POST"
              }).done(function () {
                window.location.reload();
              });
            }
          </script>
          
          <div class="b-ts__open-trading-session">
            <div class="b-ts__message">@MLMExchange.Properties.PrivateResource.IsTradingSessionShouldBeOpen 
              <i class="b-ts__icon fa fa-question-circle" data-ot="@MLMExchange.Properties.PrivateResource.IsTradingSessionShouldBeOpen" data-ot-style="BlackStyle"></i>
            </div>

            <div class="b-ts_button-wrapper">
              <a href="#" class="b-btn b-btn-flat-action b-ts__button_action_open-progress-session" data-trade-session-id="@Model.Id" onclick="javascript: setSessionInProgress(this);">
                <i class="fa  fa-arrow-circle-right"></i>
                @MLMExchange.Properties.ResourcesA.Button_Open
              </a>
            </div>
          </div>
        }
    }
    
    @if (Model.State == Logic.TradingSessionStatus.SessionInProgress)
    {
      <div class="b-text b-ts__text b-ts__session-in-progress">
        @MLMExchange.Properties.PrivateResource.WaitingTradingSessionProgress

        <div class="b-ts__process-clock-wrapper"></div>

        <!--TODO: Не ноделано-->
        <script src="~/bower_components/countdown/jquery.countdown.js"></script>
        <script>
          $(function () {
            $('.b-ts__process-clock-wrapper').countdown({
              date: new Date(@((Model.ClosingSessionDateTime.Value - new DateTime(1970, 1, 1)).TotalMilliseconds)),
              render: function (data) {
                $(this.el).html("<div>" + this.leadingZeros(data.days, 3)
                  + " <span>Дней</span></div><div>" + this.leadingZeros(data.hours, 2) + " <span>Часов</span></div><div>"
                  + this.leadingZeros(data.min, 2) + " <span>Минут</span></div><div>" + this.leadingZeros(data.sec, 2)
                  + " <span>Секунд</span></div>");
              }
            });
          });
        </script>
      </div>
    }
  </div>
</section><!--B: Trading session-->
