//------------------------------------------------------------------------------
// <auto-generated>
//     Этот код создан программой.
//     Исполняемая версия:4.0.30319.18408
//
//     Изменения в этом файле могут привести к неправильной работе и будут потеряны в случае
//     повторной генерации кода.
// </auto-generated>
//------------------------------------------------------------------------------

namespace MLMExchange.Properties {
    using System;
    
    
    /// <summary>
    ///   Класс ресурса со строгой типизацией для поиска локализованных строк и т.д.
    /// </summary>
    // Этот класс создан автоматически классом StronglyTypedResourceBuilder
    // с помощью такого средства, как ResGen или Visual Studio.
    // Чтобы добавить или удалить член, измените файл .ResX и снова запустите ResGen
    // с параметром /str или перестройте свой проект VS.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "4.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    public class PrivateResource {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal PrivateResource() {
        }
        
        /// <summary>
        ///   Возвращает кэшированный экземпляр ResourceManager, использованный этим классом.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        public static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("MLMExchange.Properties.PrivateResource", typeof(PrivateResource).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Перезаписывает свойство CurrentUICulture текущего потока для всех
        ///   обращений к ресурсу с помощью этого класса ресурса со строгой типизацией.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        public static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Количество запрашиваемых my-crypt.
        /// </summary>
        public static string AddMyCryptConfirmAmpount {
            get {
                return ResourceManager.GetString("AddMyCryptConfirmAmpount", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на картинка подтверждающая добавление my-crypt.
        /// </summary>
        public static string AddMyCryptConfirmationImage {
            get {
                return ResourceManager.GetString("AddMyCryptConfirmationImage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Инициатор запроса на добавление my-crypt.
        /// </summary>
        public static string AddMyCryptInitiatorPhoto {
            get {
                return ResourceManager.GetString("AddMyCryptInitiatorPhoto", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на История запросов покупки my-crypt.
        /// </summary>
        public static string BuyingMyCryptRequestHistory {
            get {
                return ResourceManager.GetString("BuyingMyCryptRequestHistory", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Не выбрана платежная система по умолчанию.
        /// </summary>
        public static string DefaultPaymentSystemNotSet {
            get {
                return ResourceManager.GetString("DefaultPaymentSystemNotSet", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Система уже выбрана как дефолтная.
        /// </summary>
        public static string Exception_SystemAlreadyDefault {
            get {
                return ResourceManager.GetString("Exception_SystemAlreadyDefault", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Открыть торговую сессию?.
        /// </summary>
        public static string IsTradingSessionShouldBeOpen {
            get {
                return ResourceManager.GetString("IsTradingSessionShouldBeOpen", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Необходимо внести проверочный платеж в размере {0}.
        /// </summary>
        public static string NeedCheckPayment {
            get {
                return ResourceManager.GetString("NeedCheckPayment", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Платеж подтвержден.
        /// </summary>
        public static string PaymentApproved {
            get {
                return ResourceManager.GetString("PaymentApproved", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Платеж не подтвержден.
        /// </summary>
        public static string PaymentNotApproved {
            get {
                return ResourceManager.GetString("PaymentNotApproved", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Оплатить комиссионный сбор продавца.
        /// </summary>
        public static string PaySellerInterestRatePayment {
            get {
                return ResourceManager.GetString("PaySellerInterestRatePayment", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Оплата доходности торговой сессии.
        /// </summary>
        public static string PayYieldTradingSession {
            get {
                return ResourceManager.GetString("PayYieldTradingSession", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Инициатор запроса.
        /// </summary>
        public static string RequestUser {
            get {
                return ResourceManager.GetString("RequestUser", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Необходимо оплатит процентную ставку продавцу, в размере {0}.
        /// </summary>
        public static string RequirePayInterestRateToSaller {
            get {
                return ResourceManager.GetString("RequirePayInterestRateToSaller", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Торговая сессия не открыта.
        /// </summary>
        public static string TradingSessionNotOpened {
            get {
                return ResourceManager.GetString("TradingSessionNotOpened", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Неподтвержденные заявки на пополнение my-crypt.
        /// </summary>
        public static string UnApprovedTransactionList {
            get {
                return ResourceManager.GetString("UnApprovedTransactionList", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Управление пользователями.
        /// </summary>
        public static string UserManagment {
            get {
                return ResourceManager.GetString("UserManagment", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Ожидание проверочного платежа системе.
        /// </summary>
        public static string WaitingCheckPayment {
            get {
                return ResourceManager.GetString("WaitingCheckPayment", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Ожидание оплаты комисионного сбора продавцу.
        /// </summary>
        public static string WaitingSellerInterestRatePayment {
            get {
                return ResourceManager.GetString("WaitingSellerInterestRatePayment", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Ожидание подтверждения комиссионного сбора продавцом.
        /// </summary>
        public static string WaitingSellerInterestRatePayment_Accept {
            get {
                return ResourceManager.GetString("WaitingSellerInterestRatePayment_Accept", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Ожидание торговой сессии.
        /// </summary>
        public static string WaitingTradingSessionProgress {
            get {
                return ResourceManager.GetString("WaitingTradingSessionProgress", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Ожидание отклика пользователей.
        /// </summary>
        public static string WaitingUserResponse {
            get {
                return ResourceManager.GetString("WaitingUserResponse", resourceCulture);
            }
        }
    }
}
